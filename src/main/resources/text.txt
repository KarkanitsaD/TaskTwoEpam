В языке, С  большинство объявлений являются еще и определениями, то есть они определяют некую сущность, которая соответствует имени.
Например, запись int x; означает, что для переменной x определяется формат представления в памяти и количество байт 4.
По правилам С для каждого имени должно быть только одно определение, а вот объявлений может быть несколько. При этом все объявления некой сущности должны согласовываться по ее типу.
Глобальным же называется имя, которое объявлено вне любой функции, класса и пространства имен. Область видимости глобальных имен простирается от места их объявления и до конца файла, содержащего это объявление. Объявление имени в блоке может скрыть заместить объявление этого имени в охватывающем блоке или может скрыть глобальное имя.
LISTING:
1. #include <iostream>
2. using namespace std;
3. double x; // объявление глобальной переменной
4. void f()
5. {
6. double x; // локальная переменная скрывает глобальную
7. x = 17.5; // присваивает значение локальной переменной
8. {
9. double x; // это объявление скрывает 1 локал. перемен.
10. x = -2.5; // присваивание 2-й локальной переменной
11. }
12. x = -5.0; // присваивание 1-й локальной переменной x
13. cout << x << endl;
14. }
15. int main()
16. {
17. x =12.0;
18. f();
19. cout << x << endl;
20. return 0;
21. }
// на экране в 1-й строке выводится -5.0; а во 2-ой – +12.0
LISTING.
К скрытому глобальному имени можно обратиться с помощью оператора разрешения области видимости :: . Например, можно заменить 13-ю строку на cout << ::x << endl; и тогда на экране дважды выведется значение 120. Отметим, что не предусмотрен подобный механизм обращения к скрытой локальной переменной.